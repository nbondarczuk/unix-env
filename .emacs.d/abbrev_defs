;;-*-coding: utf-8;-*-
(define-abbrev-table 'oberon-mode-abbrev-table
  '(
    ("array" "ARRAY" indent-according-to-mode :count 0)
    ("begin" "BEGIN" indent-according-to-mode :count 0)
    ("boolean" "BOOLEAN" indent-according-to-mode :count 0)
    ("by" "BY" indent-according-to-mode :count 0)
    ("case" "CASE" indent-according-to-mode :count 0)
    ("char" "CHAR" indent-according-to-mode :count 0)
    ("const" "CONST" indent-according-to-mode :count 0)
    ("div" "DIV" indent-according-to-mode :count 0)
    ("do" "DO" indent-according-to-mode :count 0)
    ("else" "ELSE" indent-according-to-mode :count 0)
    ("elsif" "ELSIF" indent-according-to-mode :count 0)
    ("end" "END" indent-according-to-mode :count 0)
    ("exit" "EXIT" indent-according-to-mode :count 0)
    ("false" "FALSE" indent-according-to-mode :count 0)
    ("for" "FOR" indent-according-to-mode :count 0)
    ("if" "IF" indent-according-to-mode :count 0)
    ("import" "IMPORT" indent-according-to-mode :count 0)
    ("in" "IN" indent-according-to-mode :count 0)
    ("integer" "INTEGER" indent-according-to-mode :count 0)
    ("is" "IS" indent-according-to-mode :count 0)
    ("longint" "LONGINT" indent-according-to-mode :count 0)
    ("longreal" "LONGREAL" indent-according-to-mode :count 0)
    ("loop" "LOOP" indent-according-to-mode :count 0)
    ("mod" "MOD" indent-according-to-mode :count 0)
    ("module" "MODULE" indent-according-to-mode :count 0)
    ("nil" "NIL" indent-according-to-mode :count 0)
    ("of" "OF" indent-according-to-mode :count 0)
    ("or" "OR" indent-according-to-mode :count 0)
    ("pointer" "POINTER" indent-according-to-mode :count 0)
    ("procedure" "PROCEDURE" indent-according-to-mode :count 0)
    ("real" "REAL" indent-according-to-mode :count 0)
    ("record" "RECORD" indent-according-to-mode :count 0)
    ("repeat" "REPEAT" indent-according-to-mode :count 0)
    ("return" "RETURN" indent-according-to-mode :count 0)
    ("set" "SET" indent-according-to-mode :count 0)
    ("shortint" "SHORTINT" indent-according-to-mode :count 0)
    ("then" "THEN" indent-according-to-mode :count 0)
    ("to" "TO" indent-according-to-mode :count 0)
    ("true" "TRUE" indent-according-to-mode :count 0)
    ("type" "TYPE" indent-according-to-mode :count 0)
    ("until" "UNTIL" indent-according-to-mode :count 0)
    ("var" "VAR" indent-according-to-mode :count 0)
    ("while" "WHILE" indent-according-to-mode :count 0)
    ("with" "WITH" indent-according-to-mode :count 0)
   ))

